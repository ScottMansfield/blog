<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.38.0 (20140413.2041)
 -->
<!-- Title: crypto_rand_default Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/** 
 *  SVGPan library 1.2.1
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the first g 
 * element), including the the library into any SVG adds the following capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2010 Andrea Leofreddi <a.leofreddi@itcharm.com>. All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 *    1. Redistributions of source code must retain the above copyright notice, this list of
 *       conditions and the following disclaimer.
 * 
 *    2. Redistributions in binary form must reproduce the above copyright notice, this list
 *       of conditions and the following disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY Andrea Leofreddi ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Andrea Leofreddi OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION 
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)

/// <====
/// END OF CONFIGURATION 

var root = document.documentElement;

var state = 'none', svgRoot, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(typeof(svgRoot) == "undefined") {
		var g = null;

		g = root.getElementById("viewport");

		if(g == null)
			g = root.getElementsByTagName('g')[0];

		if(g == null)
			alert('Unable to obtain SVG root element');

		setCTM(g, g.getCTM());

		g.removeAttribute("viewBox");

		svgRoot = g;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 3600; // Chrome/Safari
	else
		delta = evt.detail / -90; // Mozilla

	var z = 1 + delta; // Zoom factor: 0.9/1.1

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg" 
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element 
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}

]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1454)">
<title>crypto_rand_default</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-1454 770,-1454 770,4 -4,4"/>
<g id="clust1" class="cluster"><title>cluster_L</title>
<polygon fill="none" stroke="black" points="8,-1278 8,-1442 494,-1442 494,-1278 8,-1278"/>
</g>
<!-- L -->
<g id="node1" class="node"><title>L</title>
<polygon fill="#f8f8f8" stroke="black" points="486,-1434 16,-1434 16,-1286 486,-1286 486,-1434"/>
<text text-anchor="start" x="24" y="-1404.4" font-family="Times,serif" font-size="32.00">File: crypto_rand_default</text>
<text text-anchor="start" x="24" y="-1369.4" font-family="Times,serif" font-size="32.00">Type: cpu</text>
<text text-anchor="start" x="24" y="-1334.4" font-family="Times,serif" font-size="32.00">342.06s of 343.87s total (99.47%)</text>
<text text-anchor="start" x="24" y="-1299.4" font-family="Times,serif" font-size="32.00">Dropped 144 nodes (cum &lt;= 1.72s)</text>
</g>
<!-- N1 -->
<g id="node2" class="node"><title>N1</title>
<g id="a_node2"><a xlink:title="syscall.Syscall (336.76s)">
<polygon fill="#f8f8f8" stroke="black" points="651.5,-86 442.5,-86 442.5,-0 651.5,-0 651.5,-86"/>
<text text-anchor="middle" x="547" y="-62.8" font-family="Times,serif" font-size="24.00">syscall.Syscall</text>
<text text-anchor="middle" x="547" y="-36.8" font-family="Times,serif" font-size="24.00">336.58s(97.88%)</text>
<text text-anchor="middle" x="547" y="-10.8" font-family="Times,serif" font-size="24.00">of 336.76s(97.93%)</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node3" class="node"><title>N2</title>
<g id="a_node3"><a xlink:title="main.randData (341.55s)">
<polygon fill="#f8f8f8" stroke="black" points="598.5,-1146 495.5,-1146 495.5,-1102 598.5,-1102 598.5,-1146"/>
<text text-anchor="middle" x="547" y="-1133.2" font-family="Times,serif" font-size="11.00">main.randData</text>
<text text-anchor="middle" x="547" y="-1121.2" font-family="Times,serif" font-size="11.00">5.40s(1.57%)</text>
<text text-anchor="middle" x="547" y="-1109.2" font-family="Times,serif" font-size="11.00">of 341.55s(99.33%)</text>
</a>
</g>
</g>
<!-- N6 -->
<g id="node7" class="node"><title>N6</title>
<g id="a_node7"><a xlink:title="crypto/rand.Read (336.86s)">
<polygon fill="#f8f8f8" stroke="black" points="591.5,-1051 502.5,-1051 502.5,-1013 591.5,-1013 591.5,-1051"/>
<text text-anchor="middle" x="547" y="-1039.8" font-family="Times,serif" font-size="9.00">crypto/rand.Read</text>
<text text-anchor="middle" x="547" y="-1029.8" font-family="Times,serif" font-size="9.00">0.01s(0.0029%)</text>
<text text-anchor="middle" x="547" y="-1019.8" font-family="Times,serif" font-size="9.00">of 336.86s(97.96%)</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;N6 -->
<g id="edge6" class="edge"><title>N2&#45;&gt;N6</title>
<g id="a_edge6"><a xlink:title="main.randData &#45;&gt; crypto/rand.Read (335.61s)">
<path fill="none" stroke="black" stroke-width="5" d="M547,-1101.67C547,-1089.65 547,-1074.48 547,-1061.46"/>
<polygon fill="black" stroke="black" stroke-width="5" points="551.375,-1061.14 547,-1051.14 542.625,-1061.14 551.375,-1061.14"/>
</a>
</g>
<g id="a_edge6&#45;label"><a xlink:title="main.randData &#45;&gt; crypto/rand.Read (335.61s)">
<text text-anchor="middle" x="570.5" y="-1072.8" font-family="Times,serif" font-size="14.00"> 335.61s</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node4" class="node"><title>N3</title>
<g id="a_node4"><a xlink:title="io.ReadAtLeast (336.85s)">
<polygon fill="#f8f8f8" stroke="black" points="591.5,-875 502.5,-875 502.5,-837 591.5,-837 591.5,-875"/>
<text text-anchor="middle" x="547" y="-863.8" font-family="Times,serif" font-size="9.00">io.ReadAtLeast</text>
<text text-anchor="middle" x="547" y="-853.8" font-family="Times,serif" font-size="9.00">0.03s(0.0087%)</text>
<text text-anchor="middle" x="547" y="-843.8" font-family="Times,serif" font-size="9.00">of 336.85s(97.96%)</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node6" class="node"><title>N5</title>
<g id="a_node6"><a xlink:title="crypto/rand.(*devReader).Read (336.82s)">
<polygon fill="#f8f8f8" stroke="black" points="611,-786 483,-786 483,-748 611,-748 611,-786"/>
<text text-anchor="middle" x="547" y="-774.8" font-family="Times,serif" font-size="9.00">crypto/rand.(*devReader).Read</text>
<text text-anchor="middle" x="547" y="-764.8" font-family="Times,serif" font-size="9.00">0.01s(0.0029%)</text>
<text text-anchor="middle" x="547" y="-754.8" font-family="Times,serif" font-size="9.00">of 336.82s(97.95%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N5 -->
<g id="edge5" class="edge"><title>N3&#45;&gt;N5</title>
<g id="a_edge5"><a xlink:title="io.ReadAtLeast &#45;&gt; crypto/rand.(*devReader).Read (336.82s)">
<path fill="none" stroke="black" stroke-width="5" d="M547,-836.974C547,-825.192 547,-809.561 547,-796.158"/>
<polygon fill="black" stroke="black" stroke-width="5" points="551.375,-796.003 547,-786.003 542.625,-796.003 551.375,-796.003"/>
</a>
</g>
<g id="a_edge5&#45;label"><a xlink:title="io.ReadAtLeast &#45;&gt; crypto/rand.(*devReader).Read (336.82s)">
<text text-anchor="middle" x="570.5" y="-807.8" font-family="Times,serif" font-size="14.00"> 336.82s</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node5" class="node"><title>N4</title>
<g id="a_node5"><a xlink:title="main.do.func1 (343.13s)">
<polygon fill="#f8f8f8" stroke="black" points="591.5,-1235 502.5,-1235 502.5,-1197 591.5,-1197 591.5,-1235"/>
<text text-anchor="middle" x="547" y="-1223.8" font-family="Times,serif" font-size="9.00">main.do.func1</text>
<text text-anchor="middle" x="547" y="-1213.8" font-family="Times,serif" font-size="9.00">0.02s(0.0058%)</text>
<text text-anchor="middle" x="547" y="-1203.8" font-family="Times,serif" font-size="9.00">of 343.13s(99.78%)</text>
</a>
</g>
</g>
<!-- N4&#45;&gt;N2 -->
<g id="edge2" class="edge"><title>N4&#45;&gt;N2</title>
<g id="a_edge2"><a xlink:title="main.do.func1 &#45;&gt; main.randData (341.55s)">
<path fill="none" stroke="black" stroke-width="5" d="M547,-1196.79C547,-1185.2 547,-1169.88 547,-1156.37"/>
<polygon fill="black" stroke="black" stroke-width="5" points="551.375,-1156.03 547,-1146.03 542.625,-1156.03 551.375,-1156.03"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="main.do.func1 &#45;&gt; main.randData (341.55s)">
<text text-anchor="middle" x="570.5" y="-1167.8" font-family="Times,serif" font-size="14.00"> 341.55s</text>
</a>
</g>
</g>
<!-- N4&#45;&gt;N6 -->
<g id="edge18" class="edge"><title>N4&#45;&gt;N6</title>
<g id="a_edge18"><a xlink:title="main.do.func1 &#45;&gt; crypto/rand.Read (1.25s)">
<path fill="none" stroke="black" d="M579.91,-1196.84C586.689,-1191.81 593.211,-1185.83 598,-1179 617.772,-1150.78 611.573,-1136.15 607,-1102 604.982,-1086.93 606.724,-1081.45 598,-1069 595.157,-1064.94 591.702,-1061.19 587.946,-1057.75"/>
<polygon fill="black" stroke="black" points="589.862,-1054.8 579.91,-1051.16 585.425,-1060.21 589.862,-1054.8"/>
</a>
</g>
<g id="a_edge18&#45;label"><a xlink:title="main.do.func1 &#45;&gt; crypto/rand.Read (1.25s)">
<text text-anchor="middle" x="629" y="-1120.3" font-family="Times,serif" font-size="14.00"> 1.25s</text>
</a>
</g>
</g>
<!-- N7 -->
<g id="node8" class="node"><title>N7</title>
<g id="a_node8"><a xlink:title="crypto/rand.getRandomLinux (334.04s)">
<polygon fill="#f8f8f8" stroke="black" points="607.5,-697 486.5,-697 486.5,-659 607.5,-659 607.5,-697"/>
<text text-anchor="middle" x="547" y="-685.8" font-family="Times,serif" font-size="9.00">crypto/rand.getRandomLinux</text>
<text text-anchor="middle" x="547" y="-675.8" font-family="Times,serif" font-size="9.00">0.01s(0.0029%)</text>
<text text-anchor="middle" x="547" y="-665.8" font-family="Times,serif" font-size="9.00">of 334.04s(97.14%)</text>
</a>
</g>
</g>
<!-- N5&#45;&gt;N7 -->
<g id="edge7" class="edge"><title>N5&#45;&gt;N7</title>
<g id="a_edge7"><a xlink:title="crypto/rand.(*devReader).Read &#45;&gt; crypto/rand.getRandomLinux (334.04s)">
<path fill="none" stroke="black" stroke-width="5" d="M547,-747.974C547,-736.192 547,-720.561 547,-707.158"/>
<polygon fill="black" stroke="black" stroke-width="5" points="551.375,-707.003 547,-697.003 542.625,-707.003 551.375,-707.003"/>
</a>
</g>
<g id="a_edge7&#45;label"><a xlink:title="crypto/rand.(*devReader).Read &#45;&gt; crypto/rand.getRandomLinux (334.04s)">
<text text-anchor="middle" x="570.5" y="-718.8" font-family="Times,serif" font-size="14.00"> 334.04s</text>
</a>
</g>
</g>
<!-- N8 -->
<g id="node9" class="node"><title>N8</title>
<g id="a_node9"><a xlink:title="bufio.(*Reader).Read (2.75s)">
<polygon fill="#f8f8f8" stroke="black" points="725.5,-696 638.5,-696 638.5,-660 725.5,-660 725.5,-696"/>
<text text-anchor="middle" x="682" y="-680.6" font-family="Times,serif" font-size="8.00">bufio.(*Reader).Read</text>
<text text-anchor="middle" x="682" y="-671.6" font-family="Times,serif" font-size="8.00">0 of 2.75s(0.8%)</text>
</a>
</g>
</g>
<!-- N5&#45;&gt;N8 -->
<g id="edge10" class="edge"><title>N5&#45;&gt;N8</title>
<g id="a_edge10"><a xlink:title="crypto/rand.(*devReader).Read &#45;&gt; bufio.(*Reader).Read (2.75s)">
<path fill="none" stroke="black" d="M574.972,-747.974C595.835,-734.528 624.477,-716.07 646.882,-701.632"/>
<polygon fill="black" stroke="black" points="648.932,-704.474 655.442,-696.115 645.14,-698.59 648.932,-704.474"/>
</a>
</g>
<g id="a_edge10&#45;label"><a xlink:title="crypto/rand.(*devReader).Read &#45;&gt; bufio.(*Reader).Read (2.75s)">
<text text-anchor="middle" x="639" y="-718.8" font-family="Times,serif" font-size="14.00"> 2.75s</text>
</a>
</g>
</g>
<!-- N12 -->
<g id="node13" class="node"><title>N12</title>
<g id="a_node13"><a xlink:title="io.ReadFull (336.85s)">
<polygon fill="#f8f8f8" stroke="black" points="590,-962 504,-962 504,-926 590,-926 590,-962"/>
<text text-anchor="middle" x="547" y="-946.6" font-family="Times,serif" font-size="8.00">io.ReadFull</text>
<text text-anchor="middle" x="547" y="-937.6" font-family="Times,serif" font-size="8.00">0 of 336.85s(97.96%)</text>
</a>
</g>
</g>
<!-- N6&#45;&gt;N12 -->
<g id="edge3" class="edge"><title>N6&#45;&gt;N12</title>
<g id="a_edge3"><a xlink:title="crypto/rand.Read &#45;&gt; io.ReadFull (336.85s)">
<path fill="none" stroke="black" stroke-width="5" d="M547,-1012.76C547,-1000.93 547,-985.316 547,-972.055"/>
<polygon fill="black" stroke="black" stroke-width="5" points="551.375,-972.042 547,-962.042 542.625,-972.042 551.375,-972.042"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="crypto/rand.Read &#45;&gt; io.ReadFull (336.85s)">
<text text-anchor="middle" x="570.5" y="-983.8" font-family="Times,serif" font-size="14.00"> 336.85s</text>
</a>
</g>
</g>
<!-- N11 -->
<g id="node12" class="node"><title>N11</title>
<g id="a_node12"><a xlink:title="internal/syscall/unix.GetRandom (334.02s)">
<polygon fill="#f8f8f8" stroke="black" points="608,-608 486,-608 486,-572 608,-572 608,-608"/>
<text text-anchor="middle" x="547" y="-592.6" font-family="Times,serif" font-size="8.00">internal/syscall/unix.GetRandom</text>
<text text-anchor="middle" x="547" y="-583.6" font-family="Times,serif" font-size="8.00">0 of 334.02s(97.14%)</text>
</a>
</g>
</g>
<!-- N7&#45;&gt;N11 -->
<g id="edge8" class="edge"><title>N7&#45;&gt;N11</title>
<g id="a_edge8"><a xlink:title="crypto/rand.getRandomLinux &#45;&gt; internal/syscall/unix.GetRandom (334.02s)">
<path fill="none" stroke="black" stroke-width="5" d="M547,-658.762C547,-646.934 547,-631.316 547,-618.055"/>
<polygon fill="black" stroke="black" stroke-width="5" points="551.375,-618.042 547,-608.042 542.625,-618.042 551.375,-618.042"/>
</a>
</g>
<g id="a_edge8&#45;label"><a xlink:title="crypto/rand.getRandomLinux &#45;&gt; internal/syscall/unix.GetRandom (334.02s)">
<text text-anchor="middle" x="570.5" y="-629.8" font-family="Times,serif" font-size="14.00"> 334.02s</text>
</a>
</g>
</g>
<!-- N9 -->
<g id="node10" class="node"><title>N9</title>
<g id="a_node10"><a xlink:title="crypto/rand.(*hideAgainReader).Read (2.75s)">
<polygon fill="#f8f8f8" stroke="black" points="766,-608 626,-608 626,-572 766,-572 766,-608"/>
<text text-anchor="middle" x="696" y="-592.6" font-family="Times,serif" font-size="8.00">crypto/rand.(*hideAgainReader).Read</text>
<text text-anchor="middle" x="696" y="-583.6" font-family="Times,serif" font-size="8.00">0 of 2.75s(0.8%)</text>
</a>
</g>
</g>
<!-- N8&#45;&gt;N9 -->
<g id="edge17" class="edge"><title>N8&#45;&gt;N9</title>
<g id="a_edge17"><a xlink:title="bufio.(*Reader).Read &#45;&gt; crypto/rand.(*hideAgainReader).Read (2.58s)">
<path fill="none" stroke="black" d="M684.833,-659.597C686.762,-647.746 689.355,-631.817 691.557,-618.292"/>
<polygon fill="black" stroke="black" points="695.067,-618.516 693.219,-608.084 688.158,-617.392 695.067,-618.516"/>
</a>
</g>
<g id="a_edge17&#45;label"><a xlink:title="bufio.(*Reader).Read &#45;&gt; crypto/rand.(*hideAgainReader).Read (2.58s)">
<text text-anchor="middle" x="707" y="-629.8" font-family="Times,serif" font-size="14.00"> 2.58s</text>
</a>
</g>
</g>
<!-- N10 -->
<g id="node11" class="node"><title>N10</title>
<g id="a_node11"><a xlink:title="crypto/rand.hideAgainReader.Read (2.75s)">
<polygon fill="#f8f8f8" stroke="black" points="736.5,-521 605.5,-521 605.5,-485 736.5,-485 736.5,-521"/>
<text text-anchor="middle" x="671" y="-505.6" font-family="Times,serif" font-size="8.00">crypto/rand.hideAgainReader.Read</text>
<text text-anchor="middle" x="671" y="-496.6" font-family="Times,serif" font-size="8.00">0 of 2.75s(0.8%)</text>
</a>
</g>
</g>
<!-- N9&#45;&gt;N10 -->
<g id="edge11" class="edge"><title>N9&#45;&gt;N10</title>
<g id="a_edge11"><a xlink:title="crypto/rand.(*hideAgainReader).Read &#45;&gt; crypto/rand.hideAgainReader.Read (2.75s)">
<path fill="none" stroke="black" d="M690.941,-571.799C687.485,-560.047 682.835,-544.238 678.895,-530.842"/>
<polygon fill="black" stroke="black" points="682.231,-529.781 676.052,-521.175 675.516,-531.757 682.231,-529.781"/>
</a>
</g>
<g id="a_edge11&#45;label"><a xlink:title="crypto/rand.(*hideAgainReader).Read &#45;&gt; crypto/rand.hideAgainReader.Read (2.75s)">
<text text-anchor="middle" x="701" y="-542.8" font-family="Times,serif" font-size="14.00"> 2.75s</text>
</a>
</g>
</g>
<!-- N13 -->
<g id="node14" class="node"><title>N13</title>
<g id="a_node14"><a xlink:title="os.(*File).Read (2.75s)">
<polygon fill="#f8f8f8" stroke="black" points="688.5,-434 617.5,-434 617.5,-398 688.5,-398 688.5,-434"/>
<text text-anchor="middle" x="653" y="-418.6" font-family="Times,serif" font-size="8.00">os.(*File).Read</text>
<text text-anchor="middle" x="653" y="-409.6" font-family="Times,serif" font-size="8.00">0 of 2.75s(0.8%)</text>
</a>
</g>
</g>
<!-- N10&#45;&gt;N13 -->
<g id="edge12" class="edge"><title>N10&#45;&gt;N13</title>
<g id="a_edge12"><a xlink:title="crypto/rand.hideAgainReader.Read &#45;&gt; os.(*File).Read (2.75s)">
<path fill="none" stroke="black" d="M667.357,-484.799C664.893,-473.163 661.587,-457.548 658.768,-444.237"/>
<polygon fill="black" stroke="black" points="662.133,-443.233 656.637,-434.175 655.285,-444.684 662.133,-443.233"/>
</a>
</g>
<g id="a_edge12&#45;label"><a xlink:title="crypto/rand.hideAgainReader.Read &#45;&gt; os.(*File).Read (2.75s)">
<text text-anchor="middle" x="680" y="-455.8" font-family="Times,serif" font-size="14.00"> 2.75s</text>
</a>
</g>
</g>
<!-- N11&#45;&gt;N1 -->
<g id="edge9" class="edge"><title>N11&#45;&gt;N1</title>
<g id="a_edge9"><a xlink:title="internal/syscall/unix.GetRandom &#45;&gt; syscall.Syscall (334.01s)">
<path fill="none" stroke="black" stroke-width="5" d="M547,-571.744C547,-554.57 547,-527.464 547,-504 547,-504 547,-504 547,-154 547,-135.155 547,-114.493 547,-96.2157"/>
<polygon fill="black" stroke="black" stroke-width="5" points="551.375,-96.0486 547,-86.0486 542.625,-96.0487 551.375,-96.0486"/>
</a>
</g>
<g id="a_edge9&#45;label"><a xlink:title="internal/syscall/unix.GetRandom &#45;&gt; syscall.Syscall (334.01s)">
<text text-anchor="middle" x="570.5" y="-325.3" font-family="Times,serif" font-size="14.00"> 334.01s</text>
</a>
</g>
</g>
<!-- N12&#45;&gt;N3 -->
<g id="edge4" class="edge"><title>N12&#45;&gt;N3</title>
<g id="a_edge4"><a xlink:title="io.ReadFull &#45;&gt; io.ReadAtLeast (336.85s)">
<path fill="none" stroke="black" stroke-width="5" d="M547,-925.597C547,-914.056 547,-898.647 547,-885.357"/>
<polygon fill="black" stroke="black" stroke-width="5" points="551.375,-885.268 547,-875.268 542.625,-885.268 551.375,-885.268"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="io.ReadFull &#45;&gt; io.ReadAtLeast (336.85s)">
<text text-anchor="middle" x="570.5" y="-896.8" font-family="Times,serif" font-size="14.00"> 336.85s</text>
</a>
</g>
</g>
<!-- N14 -->
<g id="node15" class="node"><title>N14</title>
<g id="a_node15"><a xlink:title="os.(*File).read (2.75s)">
<polygon fill="#f8f8f8" stroke="black" points="684.5,-347 613.5,-347 613.5,-311 684.5,-311 684.5,-347"/>
<text text-anchor="middle" x="649" y="-331.6" font-family="Times,serif" font-size="8.00">os.(*File).read</text>
<text text-anchor="middle" x="649" y="-322.6" font-family="Times,serif" font-size="8.00">0 of 2.75s(0.8%)</text>
</a>
</g>
</g>
<!-- N13&#45;&gt;N14 -->
<g id="edge13" class="edge"><title>N13&#45;&gt;N14</title>
<g id="a_edge13"><a xlink:title="os.(*File).Read &#45;&gt; os.(*File).read (2.75s)">
<path fill="none" stroke="black" d="M652.191,-397.799C651.643,-386.163 650.908,-370.548 650.282,-357.237"/>
<polygon fill="black" stroke="black" points="653.775,-357 649.808,-347.175 646.782,-357.329 653.775,-357"/>
</a>
</g>
<g id="a_edge13&#45;label"><a xlink:title="os.(*File).Read &#45;&gt; os.(*File).read (2.75s)">
<text text-anchor="middle" x="668" y="-368.8" font-family="Times,serif" font-size="14.00"> 2.75s</text>
</a>
</g>
</g>
<!-- N16 -->
<g id="node17" class="node"><title>N16</title>
<g id="a_node17"><a xlink:title="syscall.Read (2.75s)">
<polygon fill="#f8f8f8" stroke="black" points="662.5,-260 591.5,-260 591.5,-224 662.5,-224 662.5,-260"/>
<text text-anchor="middle" x="627" y="-244.6" font-family="Times,serif" font-size="8.00">syscall.Read</text>
<text text-anchor="middle" x="627" y="-235.6" font-family="Times,serif" font-size="8.00">0 of 2.75s(0.8%)</text>
</a>
</g>
</g>
<!-- N14&#45;&gt;N16 -->
<g id="edge14" class="edge"><title>N14&#45;&gt;N16</title>
<g id="a_edge14"><a xlink:title="os.(*File).read &#45;&gt; syscall.Read (2.75s)">
<path fill="none" stroke="black" d="M644.548,-310.799C641.536,-299.163 637.495,-283.548 634.05,-270.237"/>
<polygon fill="black" stroke="black" points="637.339,-268.979 631.445,-260.175 630.563,-270.733 637.339,-268.979"/>
</a>
</g>
<g id="a_edge14&#45;label"><a xlink:title="os.(*File).read &#45;&gt; syscall.Read (2.75s)">
<text text-anchor="middle" x="656" y="-281.8" font-family="Times,serif" font-size="14.00"> 2.75s</text>
</a>
</g>
</g>
<!-- N15 -->
<g id="node16" class="node"><title>N15</title>
<g id="a_node16"><a xlink:title="runtime.goexit (343.57s)">
<polygon fill="#f8f8f8" stroke="black" points="590,-1378 504,-1378 504,-1342 590,-1342 590,-1378"/>
<text text-anchor="middle" x="547" y="-1362.6" font-family="Times,serif" font-size="8.00">runtime.goexit</text>
<text text-anchor="middle" x="547" y="-1353.6" font-family="Times,serif" font-size="8.00">0 of 343.57s(99.91%)</text>
</a>
</g>
</g>
<!-- N15&#45;&gt;N4 -->
<g id="edge1" class="edge"><title>N15&#45;&gt;N4</title>
<g id="a_edge1"><a xlink:title="runtime.goexit &#45;&gt; main.do.func1 (343.13s)">
<path fill="none" stroke="black" stroke-width="5" d="M547,-1341.87C547,-1317.93 547,-1274.17 547,-1245.33"/>
<polygon fill="black" stroke="black" stroke-width="5" points="551.375,-1245.08 547,-1235.08 542.625,-1245.08 551.375,-1245.08"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="runtime.goexit &#45;&gt; main.do.func1 (343.13s)">
<text text-anchor="middle" x="570.5" y="-1256.8" font-family="Times,serif" font-size="14.00"> 343.13s</text>
</a>
</g>
</g>
<!-- N17 -->
<g id="node18" class="node"><title>N17</title>
<g id="a_node18"><a xlink:title="syscall.read (2.75s)">
<polygon fill="#f8f8f8" stroke="black" points="648.5,-173 577.5,-173 577.5,-137 648.5,-137 648.5,-173"/>
<text text-anchor="middle" x="613" y="-157.6" font-family="Times,serif" font-size="8.00">syscall.read</text>
<text text-anchor="middle" x="613" y="-148.6" font-family="Times,serif" font-size="8.00">0 of 2.75s(0.8%)</text>
</a>
</g>
</g>
<!-- N16&#45;&gt;N17 -->
<g id="edge15" class="edge"><title>N16&#45;&gt;N17</title>
<g id="a_edge15"><a xlink:title="syscall.Read &#45;&gt; syscall.read (2.75s)">
<path fill="none" stroke="black" d="M624.167,-223.799C622.25,-212.163 619.678,-196.548 617.486,-183.237"/>
<polygon fill="black" stroke="black" points="620.908,-182.474 615.829,-173.175 614.001,-183.611 620.908,-182.474"/>
</a>
</g>
<g id="a_edge15&#45;label"><a xlink:title="syscall.Read &#45;&gt; syscall.read (2.75s)">
<text text-anchor="middle" x="637" y="-194.8" font-family="Times,serif" font-size="14.00"> 2.75s</text>
</a>
</g>
</g>
<!-- N17&#45;&gt;N1 -->
<g id="edge16" class="edge"><title>N17&#45;&gt;N1</title>
<g id="a_edge16"><a xlink:title="syscall.read &#45;&gt; syscall.Syscall (2.75s)">
<path fill="none" stroke="black" d="M602.688,-136.812C595.899,-125.498 586.627,-110.045 577.597,-94.995"/>
<polygon fill="black" stroke="black" points="580.475,-92.9885 572.329,-86.2143 574.472,-96.59 580.475,-92.9885"/>
</a>
</g>
<g id="a_edge16&#45;label"><a xlink:title="syscall.read &#45;&gt; syscall.Syscall (2.75s)">
<text text-anchor="middle" x="609" y="-107.8" font-family="Times,serif" font-size="14.00"> 2.75s</text>
</a>
</g>
</g>
</g>
</g></svg>
